===========================
How to Use 0-add_integer.py
===========================

This module defines an integer addition function called `add_integer(a, b=98)`.

Usage
=====

The `add_integer(a, b)` function returns the sum of its two arguments. For numeric inputs, the result is equivalent to using the `+` operator.

Examples:

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5

    >>> add_integer(2, -3)
    -1

The function also operates on floating-point values:

    >>> add_integer(2.0, 3.0)
    5

Note: Floating-point numbers are cast to integers before addition is performed.

    >>> add_integer(2.9, 0.2)
    2

    >>> add_integer(-2.9, -0.2)
    -2

The function handles a combination of floating-point and non-floating point values:

    >>> add_integer(2.3, -3)
    -1

The second argument is optional; by default, it is 98:

    >>> add_integer(2)
    100

Non-Numeric Inputs
==================

`add_integer()` expects both arguments to be integers or floats. If either argument is neither an integer nor a float, a `TypeError` is raised:

    >>> add_integer("hello", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2, "hello")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

When both arguments are non-numeric, the `TypeError` message is only printed for the first argument:

    >>> add_integer("hello", "there")
    Traceback (most recent call last):
    TypeError: a must be an integer

The function fails if infinity (`float('inf')`) is provided:

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

The function also fails with NaN (Not a Number) values (`float('nan')`):

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

